# -*- coding: utf-8 -*-
"""Extração_de_Dados_Notas_Fiscais_dos_Supridores_COPERGAS_(ICMS)-rev2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YZHXL9MF503vdqr0agTsGbYRimjpVmPJ
"""

# Primeira parte:
'''copiar todas as notas .xml na pasta "/content" (logo abaixo da pasta 
"sample_data") '''

# Segunda Parte:
'''identificar todos os nomes dos arquivos com os.walk'''
import os
k = list(os.walk('/content'))
arqnomes = k[0][2] #coluna 1

# Terceira Parte:
'''Abrir cada uma das notas .xml e extrair todos os dados necessários'''
supri = []
munic = []
uf = []
unid = []
quant = []
valun = []
valto = []
icms = []

for i in arqnomes:
  with open(i,'r') as arq:
      t = arq.read()
      # Supridores de GN - coluna 2
      ini = t.index('<xNome>') + len('<xNome>')
      fin = t.index('</xNome>')
      supri.append(t[ini:fin])
      # Município da Nota Fiscal .xml - coluna 3
      ini = t.index('<xMun>') + len('<xMun>')
      fin = t.index('</xMun>')
      munic.append(t[ini:fin])
      # Unidade Federativa da Nota Fiscal .xml - coluna 4
      ini = t.index('<UF>') + len('<UF>')
      fin = t.index('</UF>')
      uf.append(t[ini:fin])
      # Unidade de medida da Nota Fiscal .xml - coluna 5
      ini = t.index('<uCom>') + len('<uCom>')
      fin = t.index('</uCom>')
      unid.append(t[ini:fin])
      # Quantidade de GN em m³
      ini = t.index('<qCom>') + len('<qCom>')
      fin = t.index('</qCom>')
      quant.append(t[ini:fin])
      # Valor unitário de GN em R$/m³
      ini = t.index('<vUnCom>') + len('<vUnCom>')
      fin = t.index('</vUnCom>')
      valun.append(t[ini:fin])
      # Valor total de GN em R$
      ini = t.index('<vProd>') + len('<vProd>')
      fin = t.index('</vProd>')
      valto.append(t[ini:fin])
      # Valor ICMS de GN em R$
      ini = t.index('<vICMS>') + len('<vICMS>')
      fin = t.index('</vICMS>')
      icms.append(t[ini:fin])

quant_f = list(map(float,quant)) # Coluna 6
valun_f = list(map(float,valun)) # coluna 7
valto_f = list(map(float,valto)) # coluna 8
icms_f = list(map(float,icms)) # coluna 9
# Quarta Parte:
'''Abrir e salvar um arquivo .xslx com os dados retirados das notas fiscais
 .xml com o pandas'''
import pandas as pd

df1 = pd.DataFrame({
    'ARQUIVO':arqnomes,
    'SUPRIDOR':supri,
    'MUNICÍPIO':munic,
    'UF':uf,
    'UNIDADE':unid,
    'QUANTIDADE':quant_f,
    'VALOR UNITÁRIO':valun_f,
    'VALOR TOTAL':valto_f,
    'VALOR ICMS':icms_f
})
df1.to_excel('/content/sample_data/notas.xlsx')